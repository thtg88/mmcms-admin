import createActionName from '../createActionName';

const actionNames = [
    'CHANGE_PAGE_RESOURCES',
    'CLEAR_METADATA_REPORT',
    'CLEAR_METADATA_RESOURCE_CREATE',
    'CLEAR_METADATA_RESOURCE_EDIT',
    'CLEAR_METADATA_RESOURCE_GENERATE_VARIANTS',
    'CLEAR_METADATA_RESOURCES',
    'CREATE_RESOURCE_REQUEST',
    'CREATE_RESOURCE_SUCCESS',
    'CREATE_RESOURCE_ERROR',
    'DESTROY_RESOURCE_REQUEST',
    'DESTROY_RESOURCE_SUCCESS',
    'DESTROY_RESOURCE_ERROR',
    'FIND_RESOURCE_REQUEST',
    'FIND_RESOURCE_SUCCESS',
    'FIND_RESOURCE_ERROR',
    'GENERATE_VARIANTS_RESOURCE_REQUEST',
    'GENERATE_VARIANTS_RESOURCE_SUCCESS',
    'GENERATE_VARIANTS_RESOURCE_ERROR',
    'GENERATE_VARIANTS_RESOURCE_WARNING',
    'GET_ALL_RESOURCES_REQUEST',
    'GET_ALL_RESOURCES_SUCCESS',
    'GET_ALL_RESOURCES_ERROR',
    'GET_PAGINATED_RESOURCES_REQUEST',
    'GET_PAGINATED_RESOURCES_SUCCESS',
    'GET_PAGINATED_RESOURCES_ERROR',
    'PUBLISH_RESOURCE_REQUEST',
    'PUBLISH_RESOURCE_SUCCESS',
    'PUBLISH_RESOURCE_ERROR',
    'RECOVER_RESOURCE_REQUEST',
    'RECOVER_RESOURCE_SUCCESS',
    'RECOVER_RESOURCE_ERROR',
    'REGENERATE_RESOURCE_REQUEST',
    'REGENERATE_RESOURCE_SUCCESS',
    'REGENERATE_RESOURCE_ERROR',
    'REGENERATE_THUMBNAILS_REQUEST',
    'REGENERATE_THUMBNAILS_SUCCESS',
    'REGENERATE_THUMBNAILS_ERROR',
    'SEARCH_RESOURCES_REQUEST',
    'SEARCH_RESOURCES_SUCCESS',
    'SEARCH_RESOURCES_ERROR',
    'SET_PAGINATED_RESOURCES',
    'SET_RELATIONSHIP_ITEM_RESOURCE',
    'SET_RESOURCE',
    'SET_RESOURCES',
    'SET_SEQUENCE_RESOURCES_REQUEST',
    'SET_SEQUENCE_RESOURCES_SUCCESS',
    'SET_SEQUENCE_RESOURCES_ERROR',
    'UNPUBLISH_RESOURCE_REQUEST',
    'UNPUBLISH_RESOURCE_SUCCESS',
    'UNPUBLISH_RESOURCE_ERROR',
    'UNSET_RELATIONSHIP_ITEM_RESOURCE',
    'UPDATE_ATTRIBUTES_RESOURCE_REQUEST',
    'UPDATE_ATTRIBUTES_RESOURCE_SUCCESS',
    'UPDATE_ATTRIBUTES_RESOURCE_ERROR',
    'UPDATE_RESOURCE_REQUEST',
    'UPDATE_RESOURCE_SUCCESS',
    'UPDATE_RESOURCE_ERROR',
];

export const getActions = (reducerName) => actionNames.reduce(
    (result, actionName) => {
        return {
            ...result,
            [actionName]: createActionName(reducerName, actionName),
        };
    },
    {}
);
